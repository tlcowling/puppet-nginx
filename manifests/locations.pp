class nginx::locations (
  Optional[Hash] $location_configs = undef,
) inherits nginx::config {
  file { "${base_directory}/locations.d":
    ensure  => 'directory',
    owner   => $user,
    group   => $group,
    mode    => '0750',
    recurse => true,
    purge   => true,
  }

        if $location_configs {
  $location_configs.each |$n, $config| {
    notice($n, $config)
    nginx::config::location { $n:
      uri                           => $config['uri'],
      alias                         => $config['alias'],
      limit_except                  => $config['limit_except'],
      access_control_lists          => $config["access_control_lists"],
      internal                      => $config["internal"],
      absolute_redirect             => $config["absolute_redirect"],
      aio                           => $config["aio"],
      aio_write                     => $config["aio_write"],
      chunked_transfer_encoding     => $config["chunked_transfer_encoding"],
      client_body_buffer_size       => $config["client_body_buffer_size"],
      client_body_in_file_only      => $config["client_body_in_file_only"],
      client_body_in_single_buffer  => $config["client_body_in_single_buffer"],
      client_body_temp_path         => $config["client_body_temp_path"],
      client_body_timeout           => $config["client_body_timeout"],
      client_max_body_size          => $config["client_max_body_size"],
      connection_pool_size          => $config["connection_pool_size"],
      directio                      => $config["directio"],
      directio_alignment            => $config["directio_alignment"],
      disable_symlinks              => $config["disable_symlinks"],
      error_page                    => $config["error_page"],
      etag                          => $config["etag"],
      if_modified_since             => $config["if_modified_since"],
      ignore_invalid_headers        => $config["ignore_invalid_headers"],
      keepalive_disable             => $config["keepalive_disable"],
      keepalive_requests            => $config["keepalive_requests"],
      keepalive_timeout             => $config["keepalive_timeout"],
      limit_rate                    => $config["limit_rate"],
      limit_rate_after              => $config["limit_rate_after"],
      lingering_close               => $config["lingering_close"],
      lingering_time                => $config["lingering_time"],
      lingering_timeout             => $config["lingering_timeout"],
      log_not_found                 => $config["log_not_found"],
      log_subrequest                => $config["log_subrequest"],
      max_ranges                    => $config["max_ranges"],
      msie_padding                  => $config["msie_padding"],
      msie_refresh                  => $config["msie_refresh"],
      open_file_cache               => $config["open_file_cache"],
      open_file_cache_errors        => $config["open_file_cache_errors"],
      open_file_cache_min_uses      => $config["open_file_cache_min_uses"],
      open_file_cache_valid         => $config["open_file_cache_valid"],
      output_buffers                => $config["output_buffers"],
      port_in_redirect              => $config["port_in_redirect"],
      postpone_output               => $config["postpone_output"],
      read_ahead                    => $config["read_ahead"],
      recursive_error_pages         => $config["recursive_error_pages"],
      reset_timedout_connection     => $config["reset_timedout_connection"],
      resolver                      => $config["resolver"],
      resolver_timeout              => $config["resolver_timeout"],
      root                          => $config["root"],
      satisfy                       => $config["satisfy"],
      send_lowat                    => $config["send_lowat"],
      send_timeout                  => $config["send_timeout"],
      sendfile                      => $config["sendfile"],
      sendfile_max_chunk            => $config["sendfile_max_chunk"],
      server_name_in_redirect       => $config["server_name_in_redirect"],
      server_names_hash_bucket_size => $config["server_names_hash_bucket_size"],
      server_names_hash_max_size    => $config["server_names_hash_max_size"],
      server_tokens                 => $config["server_tokens"],
      tcp_nodelay                   => $config["tcp_nodelay"],
      tcp_nopush                    => $config["tcp_nopush"],
      types_hash_bucket_size        => $config["types_hash_bucket_size"],
      types_hash_max_size           => $config["types_hash_max_size"],
      underscores_in_headers        => $config["underscores_in_headers"],
      variables_hash_bucket_size    => $config["variables_hash_bucket_size"],
      variables_hash_max_size       => $config["variables_hash_max_size"]
    }
  }
        }
}
